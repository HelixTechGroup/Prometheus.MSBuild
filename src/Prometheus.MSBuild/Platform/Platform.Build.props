<Project InitialTargets="PrintPrometheusPlatform">
  <ItemGroup>
    <PlatformFolders Include="$([System.IO.Directory]::GetDirectories($(PrometheusPlatformDirectory)))" />
  </ItemGroup>

  <!--<PropertyGroup Condition="'$(TargetPlatform)' != ''">
    <Array>$(TargetPlatform.Split(`-`))</Array>
    <RuntimeId Condition="'$(RuntimeId)' == ''">$(TargetPlatform.Split(`-`)[0])</RuntimeId>
    --><!--<TargetFramework>$(RuntimeId)</TargetFramework>--><!--
    <PlatformId>$(TargetPlatform.Split(`-`)[1])</PlatformId>
    <RuntimeTargetFramework Condition="'$(PlatformId)' != ''">$(RuntimeId)-$(PlatformId)</RuntimeTargetFramework>
    --><!--<TargetFramework>$(RuntimeId)-$(PlatformId)</TargetFramework>--><!--
    --><!--<TargetFrameworks Condition="'$(TargetPlatforms)' != ''">$(TargetPlatforms)</TargetFrameworks>--><!--
  </PropertyGroup>-->

  <!--<PropertyGroup Condition=" '$(PlatformId)' != '' ">
    <HasWindows>$(PlatformId.Contains(`windows`))</HasWindows>
    <HasAndroid>$(PlatformId.Contains(`android`))</HasAndroid>
    <HasLinux>$(PlatformId.Contains(`linux`))</HasLinux>
    <HasXamarin>$(RuntimeId.Contains(`xamarin`))</HasXamarin>
    --><!--<TargetFramework Condition="'$(IsCoreRuntime)' == 'true' And '$(RuntimeVersion)' &gt; '5.0'">$(RuntimeId)-$(PlatformId)</TargetFramework>--><!--
  </PropertyGroup>-->
  
  <PropertyGroup>
    <PlatformPropsPath Condition="Exists('$(PrometheusPlatformDirectory)') And '$(PlatformId)' != ''">$(PrometheusPlatformDirectory)\$(PlatformId)\Platform.Build.Props</PlatformPropsPath>
    <PlatformTargetsPath>$(PrometheusPlatformDirectory)\$(PlatformId)\Platform.Build.Targets</PlatformTargetsPath>
  </PropertyGroup>

  <PropertyGroup>
    <!--<RuntimeId Condition="'$(RuntimeId)' == ''">None</RuntimeId>-->
    <!--<PlatformId Condition="'$(PlatformId)' == ''">None</PlatformId>-->
    <!--<RuntimeTargetFramework Condition="'$(RuntimeTargetFramework)' == ''">None</RuntimeTargetFramework>-->
    <PlatformVersion Condition="'$(PlatformVersion)' == ''">0.0</PlatformVersion>
    <RuntimeVersion Condition="'$(RuntimeVersion)' == ''">0.0</RuntimeVersion>
  </PropertyGroup>
  
  <!--<Import Project="$(PrometheusPlatformDirectory)\*\**\*.props" />-->
  <!--<ItemGroup>
    <PTArray Include="$(PrometheusPlatformDirectory)\**\*.props" Exclude="$(PrometheusPlatformProps)" />
  </ItemGroup>-->
  <PropertyGroup>
    <!--<TargetPlatform Condition=" '$(TargetPlatform)' == '' ">net5.0-none</TargetPlatform>-->
    <!--<PlatformId Condition=" '$(PlatformId)' == '' ">None</PlatformId>-->
    <!--<PlatformType Condition=" '$(PlatformType)' == '' ">None</PlatformType>-->
    <!--<UseAndroidX Condition="'$(UseAndroidX)' == ''">False</UseAndroidX>-->
    <!--<PlatformPropsPath>$(PrometheusPlatformDirectory)\$(PlatformId)\Platform.Build.Props</PlatformPropsPath>-->
    <!--<RuntimeId>$(TargetPlatform.Split(`-`)[0])</RuntimeId>
    <PlatformId>$(TargetPlatform.Split(`-`)[1])</PlatformId>
    <HasWindows>$(PlatformId.Contains(`windows`))</HasWindows>
    <HasAndroid>$(PlatformId.Contains(`android`))</HasAndroid>
    <HasLinux>$(PlatformId.Contains(`linux`))</HasLinux>
    <HasXamarin>$(RuntimeId.Contains(`xamarin`))</HasXamarin>
    <PlatformPropsPath>$(PrometheusPlatformDirectory)\$(PlatformId)\Platform.Build.Props</PlatformPropsPath>-->
  </PropertyGroup>

  <!--<PropertyGroup Condition=" '$(RuntimeId.Contains(`netcore`))' == 'true'">
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>-->

  <!--<PropertyGroup Condition="'$(HasWindows)' == 'true'">
    <PlatformProps>Windows</PlatformProps>
  </PropertyGroup>

  <PropertyGroup Condition="'$(HasLinux)' == 'true'">
    <PlatformProps>Linux</PlatformProps>
  </PropertyGroup>

  <PropertyGroup Condition="$(HasAndroid) == 'true'">
    <PlatformProps>Android</PlatformProps>
  </PropertyGroup>-->
  
    
  <Target Name="PrintPrometheusPlatform">
    <PropertyGroup>
      <SectionSymbol>@</SectionSymbol>
      <!--<RuntimeId>@(TFArray)->[0]</RuntimeId>
      <PlatformId>%(TFArray.Identity)</PlatformId>-->
    </PropertyGroup>

    <!--<PropertyGroup Condition="'$(TargetPlatform)' != ''">
      <Array>$(TargetPlatform.Split(`-`))</Array>
      <RuntimeId Condition="'$(RuntimeId)' == ''">$(TargetPlatform.Split(`-`)[0])</RuntimeId>
      --><!--<TargetFramework>$(RuntimeId)</TargetFramework>--><!--
      <PlatformId  Condition="'$(TargetPlatform.Split(`-`).Length)' &gt;= '2'">$(TargetPlatform.Split(`-`)[1])</PlatformId>
      <RuntimeTargetFramework Condition="'$(PlatformId)' != ''">$(RuntimeId)-$(PlatformId)</RuntimeTargetFramework>
      <TargetFramework>$(RuntimeId)-$(PlatformId)</TargetFramework>
      --><!--<TargetFrameworks Condition="'$(TargetPlatforms)' != ''">$(TargetPlatforms)</TargetFrameworks>--><!--
    </PropertyGroup>-->

    <!--<PropertyGroup Condition=" '$(PlatformId)' != '' ">
      <HasWindows>$(PlatformId.Contains(`windows`))</HasWindows>
      <HasAndroid>$(PlatformId.Contains(`android`))</HasAndroid>
      <HasLinux>$(PlatformId.Contains(`linux`))</HasLinux>
      <HasXamarin>$(RuntimeId.Contains(`xamarin`))</HasXamarin>
      --><!--<TargetFramework Condition="'$(IsCoreRuntime)' == 'true' And '$(RuntimeVersion)' &gt; '5.0'">$(RuntimeId)-$(PlatformId)</TargetFramework>--><!--
    </PropertyGroup>

    <PropertyGroup>
      <PlatformPropsPath Condition="Exists('$(PrometheusPlatformDirectory)') And '$(PlatformId)' != ''">$(PrometheusPlatformDirectory)\$(PlatformId)\Platform.Build.Props</PlatformPropsPath>
      <PlatformTargetsPath>$(PrometheusPlatformDirectory)\$(PlatformId)\Platform.Build.Targets</PlatformTargetsPath>
    </PropertyGroup>-->
    
    <!--<ImportFileTask ImportFiles="@(PTArray)" />-->

    <!--<ItemGroup Condition="'$(TargetPlatforms)' != ''">
      <TargetPlatform>%(TargetPlatforms.Identity)</TargetPlatform>
    </ItemGroup>-->


    <!--<Error Condition="'$(TargetPlatform)' == ''" Text="TargetPlatform must be set" />-->
    <!--<DetectPlatformTask TargetPlatform="$(TargetPlatform)"
                        Condition="'$(PrometheusTasksEnabled)' == 'true'">
      <Output TaskParameter="RuntimeId" PropertyName="RuntimeId" />
      <Output TaskParameter="PlatformId" PropertyName="PlatformId" />
    </DetectPlatformTask>-->

    <!--<PropertyGroup Condition=" '$(TargetPlatform)' != '' ">
      <HasWindows>$(TargetPlatform.Contains(`windows`))</HasWindows>
      <HasAndroid>$(TargetPlatform.Contains(`android`))</HasAndroid>
      <HasLinux>$(TargetPlatform.Contains(`linux`))</HasLinux>
      <HasXamarin>$(TargetPlatform.Contains(`xamarin`))</HasXamarin>
    </PropertyGroup>

    

    <ItemGroup Condition="'$(TargetFrameworks)' != ''">
      <TFramworks Include="$(Targetframeworks.Split(`;`))" />
    </ItemGroup>-->
    <!--<PropertyGroup Condition="'$(PlatformId)' == 'none' And '$(TargetFrameworks)' != ''">
      <TargetFramework>%(TFramworks.Identity)</TargetFramework>
    </PropertyGroup>-->

    <!--<PropertyGroup Condition="'$(HasWindows)' == 'true'">
      <PlatformProps>Windows</PlatformProps>
    </PropertyGroup>

    <PropertyGroup Condition="'$(HasLinux)' == 'true'">
      <PlatformProps>Linux</PlatformProps>
    </PropertyGroup>

    <PropertyGroup Condition="$(HasAndroid) == 'true'">
      <PlatformProps>Android</PlatformProps>
    </PropertyGroup>-->

    <Message Text="| $(SectionString)" Importance="high" />
    <Message Text="| []==~ $(MSBuildThisFile) ~==[]" Importance="high" />
    <Message Text="| $(HeaderString)" Importance="high" />

    <!--<CallTarget Targets="$(PlatformId)" Condition="Exists('$(PlatformPropsPath)')" />-->
    <CallTarget Targets="ExtraPlatformProps" Condition="Exists(ExtraPlatformProps)" />

    <!--<LogPropertyTask ProjectFiles="$(MSBuildThisFileFullPath)" SectionSymbol="$(SectionSymbol)" />-->

    <Message Text="| $(SectionSymbol) IsValidPlatform: $(IsValidPlatform)" Importance="high" />
    <Message Text="| $(SectionSymbol) RuntimeId: $(RuntimeId)" Importance="high" />
    <Message Text="| $(SectionSymbol) RuntimeVersion: $(RuntimeVersion)" Importance="high" />
    <Message Text="| $(SectionSymbol) PlatformId: $(PlatformId)" Importance="high" />
    <Message Text="| $(SectionSymbol) PlatformType: $(PlatformType)" Importance="high" />
    <Message Text="| $(SectionSymbol) PlatformVersion: $(PlatformVersion)" Importance="high" />
    <Message Text="| $(SectionSymbol) PlatformPropsPath: $(PlatformPropsPath)" Importance="high" />
    <Message Text="| $(SectionSymbol) RuntimeTargetFramework: $(RuntimeTargetFramework)" Importance="high" />
    <Message Text="| $(SectionSymbol) TargetPlatform: $(TargetPlatform)" Importance="high" />
    <Message Text="| $(SectionSymbol) TargetPlatforms: $(TargetPlatforms)" Importance="high" />
    <Message Text="| $(SectionSymbol) TargetFramework: $(TargetFramework)" Importance="high" />
    <Message Text="| $(SectionSymbol) TargetFrameworks: $(TargetFrameworks)" Importance="high" />
    <Message Text="| $(SectionSymbol) TargetFrameworkVersion: $(TargetFrameworkVersion)" Importance="high" />
    <Message Text="| $(SectionSymbol) TargetFrameworkIdentifier: $(TargetFrameworkIdentifier)" Importance="high" />
    <Message Text="| $(SectionSymbol) TargetFrameworkProfile: $(TargetFrameworkProfile)" Importance="high" />
    <Message Text="| $(SectionSymbol) SupportedOSPlatformVersion: $(SupportedOSPlatformVersion)" Importance="high" />
    <Message Text="| $(SectionSymbol) IsCoreVersion: $(IsCoreRuntime)" Importance="high" />
    <Message Text="| $(SectionSymbol) IsSdkVersion: $(IsSdkVersion)" Importance="high" />
    <Message Text="| $(SectionSymbol) HasWindows: $(HasWindows)" Importance="high" />
    <Message Text="| $(SectionSymbol) HasLinux: $(HasLinux)" Importance="high" />
    <Message Text="| $(SectionSymbol) HasAndroid: $(HasAndroid)" Importance="high" />
    <Message Text="| $(SectionSymbol) HasXamarin: $(HasXamarin)" Importance="high" />
    <Message Text="| $(SectionSymbol) UseAndroidX: $(UseAndroidX)" Importance="high" />
    <Message Text="| $(SectionSymbol) ---------------------------------------" Importance="high" />

    <!--<LogPropertyTask ProjectFiles="$(MSBuildThisFileFullPath)"/>-->
  </Target>
</Project>
